qfunc <- function(tau, data){
  q_est <- with(data, c(cbind(1, Z, A, Z * A) %*% tau))
  return(q_est)
}

hfunc <- function(eta, data){
  q_est <- with(data, c(cbind(1, W, A, W * A) %*% eta))
  return(q_est)
}


U_DR <- function(par, data){
  beta <- par[1]
  tau <- par[2:5]
  eta <- par[6:9]
  
  q_est <- qfunc(tau, data)
  h_est <- hfunc(eta, data)
  h1 <- with(data, c(cbind(1, W, 1, W) %*% eta))
  h0 <- with(data, c(cbind(1, W, 0, 0) %*% eta))
  U_q <- with(data,
              c((1 - Y) * q_est) * cbind(1, W, A, W * A) - (1 - Y) * cbind(2, 2 * W, 1, W))
  U_h <- with(data,
              c((1 - Y) * h_est - Y) * cbind(1, Z, A, Z * A))
  
  U_rr <- with(data,
               (1 - Y) * (h1 - h0 * exp(beta)) -
                 ((1-Y) * h_est - Y) * (2 * A - 1) * q_est * exp(beta * (1 - A)))
  U <- cbind(U_q, U_h, U_rr)
  return(U)
}

U_OR <- function(par, data){
  beta <- par[1]
  eta <- par[2:5]


  h_est <- hfunc(eta, data)
  h1 <- with(data, c(cbind(1, W, 1, W) %*% eta))
  h0 <- with(data, c(cbind(1, W, 0, 0) %*% eta))

  U_h <- with(data,
              c((1 - Y) * h_est - Y) * cbind(1, Z, A, Z * A))
  
  U_rr <- with(data,
               (1 - Y) * (h1 - h0 * exp(beta)))
  U <- cbind(U_h, U_rr)
  return(U)
}





U_IPW <- function(par, data){
  beta <- par[1]
  tau <- par[2:5]
  
  q_est <- qfunc(tau, data)
  
  U_q <- with(data,
              c((1 - Y) * q_est) * cbind(1, W, A, W * A) - (1 - Y) * cbind(2, 2 * W, 1, W))
  
  U_rr <- with(data,
               (2 * A - 1) * Y * exp(- beta * A) * q_est)
  U <- cbind(U_q, U_rr)
  return(U)
}

GMMF <- function(mrf, param, data, ...){
  g0 <- mrf(par = param, data = data, ...)
  g <- apply(g0, 2, mean)
  gmmf <- sum(g ^ 2)
  
  return(gmmf)
}

G <- function(bfun, para, data){
  G <- numDeriv::jacobian(func = G1, bfun = bfun, x = para, data = data)
  return(G)
}

G1 <- function(bfun, param, data){
  G1 <- apply(bfun(param, data), 2, mean, na.rm=T)
  return(G1)
}

## sandwich variance
var.gmmf <- function(bfun, param, data){
  bG <- solve(G(bfun, param, data))
  bg <- bfun(param, data)
  spsz <- dim(bg)[1]
  Omega <- t(bg) %*% bg / spsz
  Sigma <- bG %*% Omega %*% t(bG) / spsz
  return(Sigma)
}


nc_bin_dr <- function(data) {
  opt <- nlm(f = GMMF, p = rep(0.1, 9), mrf = U_DR, data = data)
  param_all <- opt$estimate
  beta_est <- param_all[1]
  
  var_all <- var.gmmf(bfun = U_DR, para = param_all, data)
  var_beta <- var_all[1, 1]
  
  return(list(est = beta_est, var = var_beta, se = sqrt(var_beta)))
}

nc_bin_ipw <- function(data) {
  opt <- nlm(f = GMMF, p = rep(0.1, 5), mrf = U_IPW, data = data)
  param_all <- opt$estimate
  beta_est <- param_all[1]
  
  var_all <- var.gmmf(bfun = U_IPW, para = param_all, data)
  var_beta <- var_all[1, 1]
  
  return(list(est = beta_est, var = var_beta, se = sqrt(var_beta)))
}

nc_bin_or <- function(data) {
  opt <- nlm(f = GMMF, p = rep(0.1, 5), mrf = U_OR, data = data)
  param_all <- opt$estimate
  beta_est <- param_all[1]
  
  var_all <- var.gmmf(bfun = U_OR, para = param_all, data)
  var_beta <- var_all[1, 1]
  
  return(list(est = beta_est, var = var_beta, se = sqrt(var_beta)))
}

